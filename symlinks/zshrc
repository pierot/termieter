source $HOME/.termieter/env

have() {
  type "$1" &> /dev/null
}

export ZSH=$TRM/zsh/oh-my-zsh

# Set custom zsh directory
ZSH_CUSTOM="$TRM/zsh/custom"

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# if [[ $OS == 'OSX' ]] || [[ $OSTYPE == "linux-gnu"* ]]; then
ZSH_THEME="kolo"

# Debian are our servers
if [ -n "$(uname -a | grep Debian)" ]; then
  ZSH_THEME="dallas"
fi

# RPI
if [ -n "$(uname -a | grep armv6l)" ] || [ -n "$(uname -a | grep armv7l)" ]; then
  ZSH_THEME="alanpeabody"
fi

# RPI or ARM
if [ -n "$(uname -a | grep aarch64)" ]; then
  if [ -n "$(cat /proc/device-tree/model | grep -a "Raspberry")" ]; then
    ZSH_THEME="alanpeabody"
  fi
fi

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE="20"
ZSH_AUTOSUGGEST_USE_ASYNC=1

# When listing options (by `setopt', `unsetopt', `set -o' or `set +o'),
# those turned on by default appear in the list prefixed with `no'.
# Hence (unless KSH_OPTION_PRINT is set), `setopt' shows all options
# whose settings are changed from the default.
#
# Report the status of background jobs immediately, rather than
# waiting until just before printing a prompt.
setopt notify

# Save timestamp in history
setopt extendedhistory
# Appends every command to the history file once it is executed
setopt inc_append_history
# Reloads the history whenever you use it
setopt share_history

#Â Remove superfluous blanks from each command line being added to the history list
setopt histreduceblanks
# Remove command lines from the history list when the first character on the line is a space, or when one of the expanded aliases contains a leading space
setopt histignorespace
# Do not enter command lines into the history list if they are duplicates of the previous event.
setopt histignorealldups

# initialize autocomplete here, otherwise functions won't be loaded
autoload -Uz compinit
if [ "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)" ]; then
  compinit
else
  compinit -C
fi

fpath=(/usr/local/share/zsh-completions $fpath)

zstyle ':completion:*' menu yes=long select
zstyle ':completion:*' use-cache yes
zstyle ':completion:*:functions' ignored-patterns '_*'

# Colors for ls and autocompletion
# if [[ $OS == 'OSX' ]]; then
#   eval $( gdircolors -b $ZSH/../LS_COLORS )
# else
if have dircolors; then
  eval $( dircolors -b $ZSH/../LS_COLORS )
fi
# fi
zstyle ':completion:*:default'            list-colors ${(s.:.)LS_COLORS}

alias reload!='exec zsh'

[ -f $TRM/zsh/base.sh ] && source $TRM/zsh/base.sh
[ -f $HOME/.zshrc.local ] && source $HOME/.zshrc.local

bindkey -e

if have starship; then
  eval "$(starship init zsh)"
else
  # Which plugins would you like to load? 
  # (plugins can be found in ~/.oh-my-zsh/plugins/*)
  plugins=(history-substring-search colored-man-pages)

  if [[ $OS == 'OSX' ]]; then
    plugins+=(fzf mix-fast git asdf)
  fi

  if [ -n "$(uname -a | grep Debian)" ]; then
    plugins+=(debian)
  fi

  source $ZSH/oh-my-zsh.sh
fi
